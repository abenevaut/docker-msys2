name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

#  lint:
#    runs-on: ubuntu-latest
#    steps:

#      - uses: actions/checkout@v2

#      - name: lint Dockerfile
#        run: |
#          docker pull hadolint/hadolint
#          docker run --rm -i hadolint/hadolint < Dockerfile

  test:
    strategy:
      matrix:
        os: [windows-2022]
        include:
          - os: windows-2022
            windows_version: 11
            servercore_tag: ltsc2022
    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v2

      - name: Is docker ready to handle connection
        run: |
          net stop com.docker.service
          dir C:\Users\runneradmin\.docker
          cat C:\Users\runneradmin\.docker\config.json
          $dockerSettingPath = "C:\Users\runneradmin\.docker\config.json"
          $settingsContent = Get-Content $dockerSettingPath -Raw | ConvertFrom-Json
          $settingsContent.exposeDockerAPIOnTCP2375 = $true
          $settingsContent | ConvertTo-Json | Set-Content $dockerSettingPath
          net start com.docker.service
          docker -H tcp://localhost:2375 ps
        shell: powershell

      - name: Make cache image
        run: |
          docker pull --quiet abenevaut/msys2:latest-w${{ matrix.windows_version }}
          docker tag abenevaut/msys2:latest-w${{ matrix.windows_version }} abenevaut/msys2:cache

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Run tests
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle exec rubocop
          bundle exec rspec
        env:
          DOCKER_HOST: tcp://127.0.0.1:2375
          SERVERCORE_TAG: ${{ matrix.servercore_tag }}
